{"version":3,"sources":["index.js"],"names":["millisToString","duration","console","log","Math","floor","minutes","seconds","App","props","handleClick","state","count","setState","history","prev_time","Date","now","new_time","concat","this","onClick","className","fastest_lap","arr","min_value","Number","MAX_SAFE_INTEGER","min_index","i","length","minIndex","fastest_text","fastest","times","map","v","cls","key","reverse","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0OAkBMA,G,MAAiB,SAACC,GACtBC,QAAQC,IAAI,WAAYF,GAOXG,KAAKC,MAAMJ,EAFT,OAGDG,KAAKC,MAAMJ,EAJT,MAHhB,IAQMK,EAAUF,KAAKC,MAAMJ,EANT,KAOZM,EAAUN,EARE,IAUlB,MAAM,GAAN,OAAUK,EAAV,gBAAyBC,EAAzB,UAGIC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQRC,YAAc,WACZ,GAAyB,OAArB,EAAKC,MAAMC,MAEb,EAAKC,SAAS,CACZC,QAAS,GACTF,MAAO,EACPG,UAAWC,KAAKC,YAEb,CACL,IAAMA,EAAMD,KAAKC,MACXC,EAAWD,EAAM,EAAKN,MAAMI,UAElC,EAAKF,SAAS,CACZC,QAAS,EAAKH,MAAMG,QAAQK,OAAO,CAACD,IACpCN,MAAO,EAAKD,MAAMC,MAAQ,EAC1BG,UAAWE,MAtBf,EAAKN,MAAQ,CACXG,QAAS,KACTC,UAAW,KACXH,MAAO,MALQ,E,qDA8BjB,GAAyB,OAArBQ,KAAKT,MAAMC,MACb,OACE,yBAAKS,QAASD,KAAKV,aACjB,yBAAKY,UAAU,eAAe,OAKpC,IAAMR,EAAUM,KAAKT,MAAMG,QACrBS,EAtEO,SAACC,GAGhB,IAFA,IAAIC,EAAYC,OAAOC,iBACnBC,GAAa,EACRC,EAAI,EAAGA,EAAIL,EAAIM,OAAQD,IAC1BL,EAAIK,IAAMJ,IACZA,EAAYD,EAAIK,GAChBD,EAAYC,GAKhB,OADA3B,QAAQC,IAAI,eAAgByB,EAAWH,GAChCG,EA2DeG,CAASjB,GACvBkB,EAAY,mBAAeT,EAAc,EAA7B,cAAoCvB,EACpDc,EAAQS,KAEJU,EACJV,GAAe,EACb,yBAAKD,UAAU,iBAAiBU,GAC9B,KAEAE,EAAQpB,EACXqB,KAAI,SAACC,EAAGP,GACP,IAAMQ,EAAMR,IAAMN,EAAc,gBAAkB,aAElD,OACE,yBAAKD,UAAWe,EAAKC,IAAKT,GACvBA,EAAI,EADP,MACa7B,EAAeoC,OAI/BG,UAEH,OACE,yBAAKlB,QAASD,KAAKV,aACjB,yBAAKY,UAAU,eAAeF,KAAKT,MAAMC,OAAS,MACjDqB,EACAC,O,GAjESM,IAAMC,WAyExBC,IAASC,OAAO,kBAACnC,EAAD,MAASoC,SAASC,eAAe,W","file":"static/js/main.0507352d.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nconst minIndex = (arr) => {\n  let min_value = Number.MAX_SAFE_INTEGER;\n  let min_index = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] <= min_value) {\n      min_value = arr[i];\n      min_index = i;\n    }\n  }\n\n  console.log(\"minIndex => \", min_index, min_value);\n  return min_index;\n};\n\nconst millisToString = (duration) => {\n  console.log(\"duration\", duration);\n  const millis_t = 1;\n  const seconds_t = 1000 * millis_t;\n  const minutes_t = 60 * seconds_t;\n  const hours_t = 60 * minutes_t;\n  const days_t = 24 * hours_t;\n\n  const days = Math.floor(duration / days_t);\n  const hours = Math.floor(duration / hours_t);\n  const minutes = Math.floor(duration / minutes_t);\n  const seconds = duration / seconds_t;\n\n  return `${minutes} min ${seconds} sec`;\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: null,\n      prev_time: null,\n      count: null,\n    };\n  }\n\n  handleClick = () => {\n    if (this.state.count === null) {\n      // first click\n      this.setState({\n        history: [],\n        count: 1,\n        prev_time: Date.now(),\n      });\n    } else {\n      const now = Date.now();\n      const new_time = now - this.state.prev_time;\n\n      this.setState({\n        history: this.state.history.concat([new_time]), //[...history, squares],\n        count: this.state.count + 1,\n        prev_time: now,\n      });\n    }\n  };\n\n  render() {\n    if (this.state.count === null) {\n      return (\n        <div onClick={this.handleClick}>\n          <div className=\"count-block\">{\"GO\"}</div>          \n        </div>\n      );\n    }\n\n    const history = this.state.history;\n    const fastest_lap = minIndex(history);\n    const fastest_text = `FASTEST: ${fastest_lap + 1} - ${millisToString(\n      history[fastest_lap]\n    )}`;\n    const fastest =\n      fastest_lap >= 0 ? (\n        <div className=\"fastest-block\">{fastest_text}</div>\n      ) : null;\n\n    const times = history\n      .map((v, i) => {\n        const cls = i === fastest_lap ? \"fastest-block\" : \"time-block\";\n\n        return (\n          <div className={cls} key={i}>\n            {i + 1} - {millisToString(v)}\n          </div>\n        );\n      })\n      .reverse();\n\n    return (\n      <div onClick={this.handleClick}>\n        <div className=\"count-block\">{this.state.count || \"GO\"}</div>\n        {fastest}\n        {times}\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}