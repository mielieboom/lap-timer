{"version":3,"sources":["index.js"],"names":["millisToString","duration","days","Math","floor","hours","minutes","to","seconds","toFixed","result","Clock","props","state","time","Date","now","start","this","intervalID","setInterval","tick","clearInterval","setState","time_text","className","React","Component","App","handleClick","prev_event_time","count","history","prev_time","new_time","concat","onClick","fastest_lap","arr","min_value","Number","MAX_SAFE_INTEGER","min_index","i","length","console","log","minIndex","fastest_text","fastest","times","map","v","cls","key","reverse","onTouchEnd","ReactDOM","render","document","getElementById"],"mappings":"0OAoBMA,G,MAAiB,SAACC,GACtB,IAMMC,EAAOC,KAAKC,MAAMH,EAFT,OAGTI,EAAQF,KAAKC,MAAOH,EAHX,MADC,MAKVK,EAAUH,KAAKC,MAAOH,EALZ,KADE,KAM2CM,GACvDC,GAAYP,EAPA,IADA,KAQmCQ,QAAQ,GAEzDC,EAAM,UAAMJ,GAAW,EAAjB,aAAuBE,EAAvB,KAIV,OAHAE,EAASL,EAAQ,UAAGA,EAAH,MAAeK,EAASA,EACzCA,EAASR,EAAO,UAAGA,EAAH,MAAcQ,EAASA,IAKnCC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAMC,KAAKC,MACXC,MAAOL,EAAMK,OAAS,GAJP,E,gEAOE,IAAD,OAClBC,KAAKC,WAAaC,aAAY,kBAAM,EAAKC,SAAQ,O,6CAGjDC,cAAcJ,KAAKC,c,6BAGnBD,KAAKK,SAAS,CACZT,KAAMC,KAAKC,MACXC,MAAOC,KAAKL,MAAMI,U,+BAGZ,IAAD,EACiBC,KAAKL,MAArBC,EADD,EACCA,KAAMG,EADP,EACOA,MACRO,EAAS,iBAAaxB,EAAec,EAAOG,IAClD,OAAO,yBAAKQ,UAAU,cAAcD,O,GAvBpBE,IAAMC,WA2BpBC,E,kDACJ,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IASRiB,YAAc,WAAO,IACXC,EAAoB,EAAKjB,MAAzBiB,gBACFd,EAAMD,KAAKC,MAGjB,KAFmBA,EAAMc,EA5EN,KAkFnB,GAAyB,OAArB,EAAKjB,MAAMkB,MAEb,EAAKR,SAAS,CACZS,QAAS,GACTD,MAAO,EACPE,UAAWjB,EACXc,gBAAiBd,QAEd,CACL,IAAMkB,EAAWlB,EAAM,EAAKH,MAAMoB,UAElC,EAAKV,SAAS,CACZS,QAAS,EAAKnB,MAAMmB,QAAQG,OAAO,CAACD,IACpCH,MAAO,EAAKlB,MAAMkB,MAAQ,EAC1BE,UAAWjB,EACXc,gBAAiBd,MAhCrB,EAAKH,MAAQ,CACXmB,QAAS,KACTC,UAAW,KACXF,MAAO,KACPD,gBAAiB,MANF,E,qDAuCT,IAAD,OACP,GAAyB,OAArBZ,KAAKL,MAAMkB,MACb,OACE,yBAAKK,QAASlB,KAAKW,aACjB,yBAAKJ,UAAU,eAAe,OAKpC,IAAMO,EAAUd,KAAKL,MAAMmB,QACrBK,EA9GO,SAACC,GAGhB,IAFA,IAAIC,EAAYC,OAAOC,iBACnBC,GAAa,EACRC,EAAI,EAAGA,EAAIL,EAAIM,OAAQD,IAC1BL,EAAIK,IAAMJ,IACZA,EAAYD,EAAIK,GAChBD,EAAYC,GAKhB,OADAE,QAAQC,IAAI,eAAgBJ,EAAWH,GAChCG,EAmGeK,CAASf,GACvBgB,EAAY,mBAAeX,EAAc,EAA7B,cAAoCrC,EACpDgC,EAAQK,KAEJY,EACJZ,GAAe,EACb,yBAAKZ,UAAU,iBAAiBuB,GAC9B,KAEAE,EAAQlB,EACXmB,KAAI,SAACC,EAAGT,GACP,IAAMU,EAAMV,IAAMN,EAAc,gBAAkB,aAElD,OACE,yBAAKZ,UAAW4B,EAAKC,IAAKX,GACvBA,EAAI,EADP,MACa3C,EAAeoD,OAI/BG,UAEH,OACE,yBACEnB,QAAS,kBAAM,EAAKP,eACpB2B,WAAY,kBAAM,EAAK3B,gBAEvB,yBAAKJ,UAAU,eAAeP,KAAKL,MAAMkB,OAAS,MAClD,kBAACpB,EAAD,CAAOc,UAAU,aAAaR,MAAOF,KAAKC,QACzCiC,EACAC,O,GA/ESxB,IAAMC,WAuFxB8B,IAASC,OAAO,kBAAC9B,EAAD,MAAS+B,SAASC,eAAe,W","file":"static/js/main.61c6f6b8.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nconst click_time_tol = 100;\n\nconst minIndex = (arr) => {\n  let min_value = Number.MAX_SAFE_INTEGER;\n  let min_index = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] <= min_value) {\n      min_value = arr[i];\n      min_index = i;\n    }\n  }\n\n  console.log(\"minIndex => \", min_index, min_value);\n  return min_index;\n};\n\nconst millisToString = (duration) => {\n  const millis_t = 1;\n  const seconds_t = 1000 * millis_t;\n  const minutes_t = 60 * seconds_t;\n  const hours_t = 60 * minutes_t;\n  const days_t = 24 * hours_t;\n\n  const days = Math.floor(duration / days_t);\n  const hours = Math.floor((duration % days_t) / hours_t);\n  const minutes = Math.floor((duration % hours_t) / minutes_t).to;\n  const seconds = ((duration % minutes_t) / seconds_t).toFixed(3);\n\n  let result = `${minutes || 0}m ${seconds}s`;\n  result = hours ? `${hours}h ` + result : result;\n  result = days ? `${days}d ` + result : result;\n\n  return result;\n};\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: Date.now(),\n      start: props.start || 0,\n    };\n  }\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.tick(), 100);\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n  tick() {\n    this.setState({\n      time: Date.now(),\n      start: this.state.start,\n    });\n  }\n  render() {\n    const { time, start } = this.state;\n    const time_text = `TOTAL: ${millisToString(time - start)}`;\n    return <div className=\"time-block\">{time_text}</div>;\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: null,\n      prev_time: null,\n      count: null,\n      prev_event_time: null,\n    };\n  }\n\n  handleClick = () => {\n    const { prev_event_time } = this.state;\n    const now = Date.now();\n    const delta_time = now - prev_event_time;\n\n    if (delta_time < click_time_tol) {\n      return; // debounce double events like onTouchUp and onClick\n    }\n\n    if (this.state.count === null) {\n      // first click\n      this.setState({\n        history: [],\n        count: 1,\n        prev_time: now,\n        prev_event_time: now,\n      });\n    } else {\n      const new_time = now - this.state.prev_time;\n\n      this.setState({\n        history: this.state.history.concat([new_time]), //[...history, squares],\n        count: this.state.count + 1,\n        prev_time: now,\n        prev_event_time: now,\n      });\n    }\n  };\n\n  render() {\n    if (this.state.count === null) {\n      return (\n        <div onClick={this.handleClick}>\n          <div className=\"count-block\">{\"GO\"}</div>\n        </div>\n      );\n    }\n\n    const history = this.state.history;\n    const fastest_lap = minIndex(history);\n    const fastest_text = `FASTEST: ${fastest_lap + 1} - ${millisToString(\n      history[fastest_lap]\n    )}`;\n    const fastest =\n      fastest_lap >= 0 ? (\n        <div className=\"fastest-block\">{fastest_text}</div>\n      ) : null;\n\n    const times = history\n      .map((v, i) => {\n        const cls = i === fastest_lap ? \"fastest-block\" : \"time-block\";\n\n        return (\n          <div className={cls} key={i}>\n            {i + 1} - {millisToString(v)}\n          </div>\n        );\n      })\n      .reverse();\n\n    return (\n      <div\n        onClick={() => this.handleClick()}\n        onTouchEnd={() => this.handleClick()}\n      >\n        <div className=\"count-block\">{this.state.count || \"GO\"}</div>\n        <Clock className=\"time-block\" start={Date.now()} />\n        {fastest}\n        {times}\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}